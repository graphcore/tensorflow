{
    "linters": {
        "clang-format": {
            "type": "clang-format",
            "bin": ["./.linters/clang-format"],
            "include": [
                 "(^tensorflow/compiler/plugin/poplar/.*\\.(c|cpp|C|cc|c\\+\\+|cxx|h|hpp)$)",
                 "(^tensorflow/python/ipu/.*\\.(c|cpp|C|cc|c\\+\\+|cxx|h|hpp)$)",
                 "(^third_party/ipus/.*\\.(c|cpp|C|cc|c\\+\\+|cxx|h|hpp)$)"
            ]
        },
        "cpplint": {
            "type": "cpplint",
            "bin": ["./.linters/cpplint"],
            "flags": ["--root=tensorflow"],
            "include": [
                 "(^tensorflow/compiler/plugin/poplar/.*\\.(c|cpp|C|cc|c\\+\\+|cxx|h|hpp)$)",
                 "(^tensorflow/python/ipu/.*\\.(c|cpp|C|cc|c\\+\\+|cxx|h|hpp)$)",
                 "(^third_party/ipus/.*\\.(c|cpp|C|cc|c\\+\\+|cxx|h|hpp)$)"
            ],
            "severity": {
              "runtime/references": "disabled",
              "build/c++11": "disabled"
            }
        },
        "yapf": {
            "type": "yapf",
            "yapf.style": "{based_on_style: pep8, indent_width: 2, space_between_ending_comma_and_closing_bracket: false}",
            "bin": ["./.linters/yapf"],
            "include": [
                "(^tensorflow/compiler/plugin/poplar/.*\\.py$)",
                "(^tensorflow/python/ipu/.*\\.py$)",
                "(^tensorflow/contrib/ipu/.*\\.py$)",
                "(^tensorflow/python/ops/poplar/.*\\.py$)",
                "(^third_party/ipus/.*\\.py$)"
            ]
        },
        "pylint": {
            "type": "pylint",
            "pylint.config": "tensorflow/tools/ci_build/pylintrc",
            "flags": ["--disable=missing-docstring,invalid-name"],
            "bin": ["./.linters/pylint"],
            "include": [
                "(^tensorflow/compiler/plugin/poplar/.*\\.py$)",
                "(^tensorflow/python/ipu/.*\\.py$)",
                "(^tensorflow/contrib/ipu/.*\\.py$)",
                "(^tensorflow/python/ops/poplar/.*\\.py$)",
                "(^third_party/ipus/.*\\.py$)"
            ]
        },
        "buildifier": {
          "type": "script-and-regex",
          "include": [
               "(^tensorflow/compiler/plugin/poplar/.*BUILD$)",
               "(^tensorflow/python/ipu/.*BUILD$)",
               "(^third_party/ipus/.*.tpl$)",
               "(^third_party/ipus/.*.bzl$)",
               "(^third_party/ipus/.*BUILD$)"
          ],
          "exclude": [
            "(^third_party/ipus/poplar_lib/LICENSE)"
          ],
          "script-and-regex.script": "sh -c '{ ./.linters/buildifier -lint warn -mode check $0 2>&1 ; ./.linters/buildifier -mode fix -lint fix $0;} || true'",
          "script-and-regex.regex": "/^(?P<file>[^ :]*)(( # )|(:(?P<line>[^:]+): ))(?P<name>[^:]+)(: (?P<message>.*))?$/m"
        },
        "gc-copyright": {
            "type": "gc-copyright",
            "gc-copyright.script_path": "../../../../tensorflow_packaging/check_copyright.py",
            "include": [
                 "(^tensorflow/compiler/plugin/poplar/.*\\.(c|cpp|C|cc|c\\+\\+|cxx|h|hpp|py)$)",
                 "(^tensorflow/python/ipu/.*\\.(c|cpp|C|cc|c\\+\\+|cxx|h|hpp|py)$)",
                 "(^third_party/ipus/.*\\.(c|cpp|C|cc|c\\+\\+|cxx|h|hpp|py)$)"
            ]
        }
    }
}
